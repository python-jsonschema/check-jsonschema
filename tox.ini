[tox]
envlist =
    mypy
    cov_clean
    py38-mindeps
    py{312,311,310,39,38}
    py310-{notoml,tomli-format}
    py{38,312}-{json5,pyjson5}
    cov
skip_missing_interpreters = true
minversion = 4.0.0

labels =
    ci = py, py-notoml, py-tomli-format, py-json5, py-pyjson5

[testenv]
description = "run tests with pytest"
usedevelop = true
extras = dev
deps =
    mindeps: jsonschema==4.18.0
    mindeps: click==8.0.0
    mindeps: requests==2.0.0
    mindeps: importlib-resources==1.4.0
    json5: json5
    pyjson5: pyjson5
    tomli: tomli
    format: jsonschema[format]
set_env =
    notoml: FORCE_TOML_DISABLED=1
commands =
    coverage run -m pytest {posargs:--junitxml={envdir}/pytest.xml}

[testenv:cov_clean]
description = "erase coverage data to prepare for a new run"
deps = coverage
skip_install = true
commands = coverage erase

[testenv:cov]
description = "combine and report coverage data"
deps = coverage
skip_install = true
commands_pre = - coverage combine
commands = coverage report --skip-covered

[testenv:mypy]
description = "check type annotations with mypy"
# temporarily pin back click until either click 8.1.5 releases or mypy fixes the issue
# with referential integrity of type aliases
deps = mypy
       types-jsonschema
       types-requests
       click==8.1.3
commands = mypy src/ {posargs}

[testenv:pyright]
description = "check type annotations with pyright"
deps = pyright
       types-jsonschema
       types-requests
commands = pyright src/ {posargs}

[testenv:docs]
description = "build docs with sphinx"
basepython = python3.10
extras = docs
allowlist_externals = rm
changedir = docs/
# clean the build dir before rebuilding
commands_pre = rm -rf _build/
commands = sphinx-build -d _build/doctrees -b dirhtml -W . _build/dirhtml {posargs}

[testenv:twine-check]
description = "check the metadata on a package build"
skip_install = true
deps = twine
       build
allowlist_externals = rm
commands_pre = rm -rf dist/
# check that twine validating package data works
commands = python -m build
           twine check dist/*

[testenv:vendor-schemas]
description = "update the vendored schemas"
deps = pre-commit
commands = python ./scripts/vendor-schemas.py

[testenv:generate-hooks-config]
description = "update autogenerated pre-commit hooks"
commands = python ./scripts/generate-hooks-config.py
