- id: check-jsonschema
  name: Validate files with jsonschema
  description: 'Validate JSON or YAML files against a jsonschema on disk or fetched via HTTP(S)'
  entry: check-jsonschema
  language: python
  types_or: [json,yaml]
  # we need types_or support
  minimum_pre_commit_version: 2.9.0

- id: check-metaschema
  name: Validate JSON Schema files
  description: 'Validate JSON Schema files against their matching metaschema'
  entry: check-jsonschema --check-metaschema
  language: python
  types_or: [json,yaml]
  # we need types_or support
  minimum_pre_commit_version: 2.9.0

# --AUTOGEN_HOOKS_START-- #

# this hook is autogenerated from a script
# to modify this hook, update `src/check_jsonschema/catalog.py`
# and run `make generate-hooks` or `tox run -e generate-hooks-config`
- id: check-azure-pipelines
  name: Validate Azure Pipelines
  description: 'Validate Azure Pipelines config against the schema provided by Microsoft'
  entry: check-jsonschema --builtin-schema vendor.azure-pipelines --data-transform azure-pipelines --regex-variant nonunicode
  language: python
  files: ^(\.)?azure-pipelines\.(yml|yaml)$
  types: [yaml]

# this hook is autogenerated from a script
# to modify this hook, update `src/check_jsonschema/catalog.py`
# and run `make generate-hooks` or `tox run -e generate-hooks-config`
- id: check-bamboo-spec
  name: Validate Bamboo Specs
  description: 'Validate Bamboo Specs against the schema provided by SchemaStore'
  entry: check-jsonschema --builtin-schema vendor.bamboo-spec
  language: python
  files: ^bamboo-specs/.*\.(yml|yaml)$
  types: [yaml]

# this hook is autogenerated from a script
# to modify this hook, update `src/check_jsonschema/catalog.py`
# and run `make generate-hooks` or `tox run -e generate-hooks-config`
- id: check-bitbucket-pipelines
  name: Validate Bitbucket Pipelines
  description: 'Validate Bitbucket Pipelines against the schema provided by SchemaStore'
  entry: check-jsonschema --builtin-schema vendor.bitbucket-pipelines
  language: python
  files: bitbucket-pipelines\.(yml|yaml)$
  types: [yaml]

# this hook is autogenerated from a script
# to modify this hook, update `src/check_jsonschema/catalog.py`
# and run `make generate-hooks` or `tox run -e generate-hooks-config`
- id: check-buildkite
  name: Validate Buildkite Pipelines
  description: 'Validate Buildkite Pipelines against the schema provided by Buildkite'
  entry: check-jsonschema --builtin-schema vendor.buildkite
  language: python
  files: >
    (?x)^(
      buildkite\.(yml|yaml|json)|
      buildkite\.(.+)\.(yml|yaml|json)|
      (.*/)?\.buildkite/pipeline\.(yml|yaml|json)|
      (.*/)?\.buildkite/pipeline\.(.+)\.(yml|yaml|json)
    )$
  types_or: [json,yaml]

# this hook is autogenerated from a script
# to modify this hook, update `src/check_jsonschema/catalog.py`
# and run `make generate-hooks` or `tox run -e generate-hooks-config`
- id: check-circle-ci
  name: Validate CircleCI config
  description: 'Validate CircleCI config against the schema provided by SchemaStore'
  entry: check-jsonschema --builtin-schema vendor.circle-ci
  language: python
  files: ^\.circleci/config\.(yml|yaml)$

# this hook is autogenerated from a script
# to modify this hook, update `src/check_jsonschema/catalog.py`
# and run `make generate-hooks` or `tox run -e generate-hooks-config`
- id: check-cloudbuild
  name: Validate Google Cloud Build config
  description: 'Validate Google Cloud Build config against the schema provided by SchemaStore'
  entry: check-jsonschema --builtin-schema vendor.cloudbuild
  language: python
  files: ^cloudbuild\.(yml|yaml|json)$
  types_or: [json,yaml]

# this hook is autogenerated from a script
# to modify this hook, update `src/check_jsonschema/catalog.py`
# and run `make generate-hooks` or `tox run -e generate-hooks-config`
- id: check-compose-spec
  name: Validate Docker Compose files
  description: 'Validate Docker Compose files against the schema provided by SchemaStore'
  entry: check-jsonschema --builtin-schema vendor.compose-spec
  language: python
  files: >
    (?x)^(
      ([^/]*/)*docker-compose(\.[\.a-zA-Z0-9_-]*)*\.(yml|yaml)|
      ([^/]*/)*compose(\.[\.a-zA-Z0-9_-]*)*\.(yml|yaml)
    )$
  types: [yaml]

# this hook is autogenerated from a script
# to modify this hook, update `src/check_jsonschema/catalog.py`
# and run `make generate-hooks` or `tox run -e generate-hooks-config`
- id: check-dependabot
  name: Validate Dependabot Config (v2)
  description: 'Validate Dependabot Config (v2) against the schema provided by SchemaStore'
  entry: check-jsonschema --builtin-schema vendor.dependabot
  language: python
  files: ^\.github/dependabot\.(yml|yaml)$
  types: [yaml]

# this hook is autogenerated from a script
# to modify this hook, update `src/check_jsonschema/catalog.py`
# and run `make generate-hooks` or `tox run -e generate-hooks-config`
- id: check-drone-ci
  name: Validate Drone-CI Config
  description: 'Validate Drone-CI Config against the schema provided by SchemaStore'
  entry: check-jsonschema --builtin-schema vendor.drone-ci
  language: python
  files: ^\.drone\.yml$
  types: [yaml]

# this hook is autogenerated from a script
# to modify this hook, update `src/check_jsonschema/catalog.py`
# and run `make generate-hooks` or `tox run -e generate-hooks-config`
- id: check-github-actions
  name: Validate GitHub Actions
  description: 'Validate GitHub Actions against the schema provided by SchemaStore'
  entry: check-jsonschema --builtin-schema vendor.github-actions
  language: python
  files: >
    (?x)^(
      action\.(yml|yaml)|
      \.github/actions/(.+/)?action\.(yml|yaml)
    )$
  types: [yaml]

# this hook is autogenerated from a script
# to modify this hook, update `src/check_jsonschema/catalog.py`
# and run `make generate-hooks` or `tox run -e generate-hooks-config`
- id: check-github-workflows
  name: Validate GitHub Workflows
  description: 'Validate GitHub Workflows against the schema provided by SchemaStore'
  entry: check-jsonschema --builtin-schema vendor.github-workflows
  language: python
  files: ^\.github/workflows/[^/]+$
  types: [yaml]

# this hook is autogenerated from a script
# to modify this hook, update `src/check_jsonschema/catalog.py`
# and run `make generate-hooks` or `tox run -e generate-hooks-config`
- id: check-gitlab-ci
  name: Validate GitLab CI config
  description: 'Validate GitLab CI config against the schema provided by SchemaStore'
  entry: check-jsonschema --builtin-schema vendor.gitlab-ci --data-transform gitlab-ci --regex-variant nonunicode
  language: python
  files: ^.*\.gitlab-ci\.yml$
  types: [yaml]

# this hook is autogenerated from a script
# to modify this hook, update `src/check_jsonschema/catalog.py`
# and run `make generate-hooks` or `tox run -e generate-hooks-config`
- id: check-mergify
  name: Validate Mergify config
  description: 'Validate Mergify config against the schema provided by SchemaStore'
  entry: check-jsonschema --builtin-schema vendor.mergify
  language: python
  files: >
    (?x)^(
      \.mergify\.yml|
      \.mergify/config\.yml|
      \.github/mergify\.yml
    )$
  types: [yaml]

# this hook is autogenerated from a script
# to modify this hook, update `src/check_jsonschema/catalog.py`
# and run `make generate-hooks` or `tox run -e generate-hooks-config`
- id: check-readthedocs
  name: Validate ReadTheDocs Config
  description: 'Validate ReadTheDocs config against the schema provided by ReadTheDocs'
  entry: check-jsonschema --builtin-schema vendor.readthedocs
  language: python
  files: ^\.readthedocs\.(yml|yaml)$
  types: [yaml]

# this hook is autogenerated from a script
# to modify this hook, update `src/check_jsonschema/catalog.py`
# and run `make generate-hooks` or `tox run -e generate-hooks-config`
- id: check-renovate
  name: Validate Renovate Config
  description: 'Validate Renovate config against the schema provided by Renovate (does not support renovate config in package.json)'
  entry: check-jsonschema --builtin-schema vendor.renovate --regex-variant nonunicode
  language: python
  files: >
    (?x)^(
      renovate\.(json|json5)|
      \.(github|gitlab)/renovate\.(json|json5)|
      \.renovaterc|
      \.renovaterc\.(json|json5)
    )$

# this hook is autogenerated from a script
# to modify this hook, update `src/check_jsonschema/catalog.py`
# and run `make generate-hooks` or `tox run -e generate-hooks-config`
- id: check-taskfile
  name: Validate Taskfile Config
  description: 'Validate Taskfile config against the schema provided by Task'
  entry: check-jsonschema --builtin-schema vendor.taskfile
  language: python
  files: >
    (?x)^(
      Taskfile\.(yml|yaml)|
      taskfile\.(yml|yaml)|
      Taskfile\.dist\.(yml|yaml)|
      taskfile\.dist\.(yml|yaml)
    )$
  types: [yaml]

# this hook is autogenerated from a script
# to modify this hook, update `src/check_jsonschema/catalog.py`
# and run `make generate-hooks` or `tox run -e generate-hooks-config`
- id: check-travis
  name: Validate Travis Config
  description: 'Validate Travis Config against the schema provided by SchemaStore'
  entry: check-jsonschema --builtin-schema vendor.travis
  language: python
  files: ^\.travis\.(yml|yaml)$
  types: [yaml]

# this hook is autogenerated from a script
# to modify this hook, update `src/check_jsonschema/catalog.py`
# and run `make generate-hooks` or `tox run -e generate-hooks-config`
- id: check-woodpecker-ci
  name: Validate Woodpecker Config
  description: 'Validate Woodpecker Config against the schema provided by SchemaStore'
  entry: check-jsonschema --builtin-schema vendor.woodpecker-ci
  language: python
  files: >
    (?x)^(
      ^\.woodpecker\.(yml|yaml)$|
      ^\.woodpecker/.+\.(yml|yaml)$
    )$
  types: [yaml]
